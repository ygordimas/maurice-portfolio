/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 TorusKnot.glb 
*/

import React, { useRef } from "react";
import { useEnvironment, useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export function TorusKnotModel(props) {
  const { nodes, materials } = useGLTF("/TorusKnot.glb");

  const cubeMap = () => {
    let cubeArray = [];

    for (let i = 0; i < 6; i++) {
      cubeArray[i] = "/headcubemap_red.png";
    }

    return cubeArray;
  };

  const envMap = useEnvironment({ files: cubeMap() });

  const ref = useRef();

  useFrame(({ clock }) => {
    ref.current.rotation.x = clock.getElapsedTime() * 0.1;
    ref.current.rotation.y = clock.getElapsedTime() * 0.1;
    ref.current.rotation.z = clock.getElapsedTime() * 0.1;
  });
  return (
    <group {...props} dispose={null}>
      <mesh ref={ref} geometry={nodes.TorusKnot.geometry}>
        <meshStandardMaterial
          attach="material"
          color="white"
          roughness={0}
          metalness={1}
          envMap={envMap}
          flatShading
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("/TorusKnot.glb");
